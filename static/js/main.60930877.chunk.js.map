{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/ErrorBoundary.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,6BAAKF,IACL,4BAAIC,WCcGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCWJC,G,wDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GAHI,E,qDAOnB,SAAkBC,EAAMC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAGG,KAAKJ,MAAMC,SACL,6DAEFG,KAAKL,MAAMO,a,GAfMC,cCabC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKnB,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVoB,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCHI,EARA,SAACd,GACd,OACE,qBAAKe,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAkBC,OAAQ,SAAnE,SACGlB,EAAMO,YCsCEY,E,kDAjCb,aAAc,IAAD,8BACX,gBAWFC,eAAiB,SAACC,GAChB,EAAKf,SAAS,CAACgB,YAAaD,EAAME,OAAOC,SAXzC,EAAKvB,MAAQ,CACXN,OAAQ,GACR2B,YAAa,IAJJ,E,qDAOb,WAAoB,IAAD,OACjBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKvB,SAAS,CAACX,OAAQkC,S,oBAK3C,WACE,MAA+BxB,KAAKJ,MAA5BN,EAAR,EAAQA,OAAO2B,EAAf,EAAeA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAApC,GACnC,OAAOA,EAAOP,KAAK4C,cAAcC,SAASX,EAAYU,kBAExD,OACE,sBAAKE,MAAM,KAAX,UACE,oBAAI3C,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWmB,aAAcL,KAAKe,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAUmC,e,GA3BdtB,aCGH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACH,cAAC,EAAD,IACAC,SAASC,eAAe,SAO9BX,M","file":"static/js/main.60930877.chunk.js","sourcesContent":["import React from 'react';\r\n//NOTE:{Use `` instead of '' in src}\r\nconst Card = ({name,email,id}) => {\r\n  return(\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst Cardlist = ({ robots }) => {\r\n  return(\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n            );\r\n          })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardlist;\r\n","import React,{ Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError : false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error,info) {\r\n    this.setState({ hasError: true})\r\n  }\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1> Oops . That is not good ! </h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return(\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--blue bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search owner'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from'react';\r\n\r\nconst Scroll = (props) =>{\r\n  return(\r\n    <div style={{overflow: 'scroll', border: '5px solid black',height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React,{ Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport '../containers/App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n// import {robots} from'./robots'; //Because we are exporting only and not default in robots.js\r\n                                // we need to write in between {}\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => {this.setState({robots: users})});\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n  }\r\n  render(){\r\n    const { robots,searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robots =>{\r\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return (\r\n      <div class='tc'>\r\n        <h1 className='f1'>Robot Owner</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <Cardlist robots = {filteredRobots}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n      <App />\n,     document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}